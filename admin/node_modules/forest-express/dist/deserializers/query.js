"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function QueryDeserializer(attributes) {
  this.perform = function () {
    var allRecords = attributes.all_records,
        allRecordsIdsExcluded = attributes.all_records_ids_excluded,
        allRecordsSubsetQuery = attributes.all_records_subset_query,
        parentAssociationName = attributes.parent_association_name,
        parentCollectionName = attributes.parent_collection_name,
        parentCollectionId = attributes.parent_collection_id,
        rest = (0, _objectWithoutProperties2["default"])(attributes, ["all_records", "all_records_ids_excluded", "all_records_subset_query", "parent_association_name", "parent_collection_name", "parent_collection_id"]);
    return _objectSpread(_objectSpread({}, rest), {}, {
      allRecords: allRecords,
      allRecordsIdsExcluded: allRecordsIdsExcluded,
      allRecordsSubsetQuery: allRecordsSubsetQuery,
      parentAssociationName: parentAssociationName,
      parentCollectionName: parentCollectionName,
      parentCollectionId: parentCollectionId
    });
  };
}

module.exports = QueryDeserializer;