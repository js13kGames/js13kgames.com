"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var path = require('path');

var ProjectDirectoryUtils = /*#__PURE__*/function () {
  function ProjectDirectoryUtils() {
    (0, _classCallCheck2["default"])(this, ProjectDirectoryUtils);
    this.dirname = __dirname;
  }

  (0, _createClass2["default"])(ProjectDirectoryUtils, [{
    key: "getAbsolutePath",
    value: function getAbsolutePath() {
      // NOTICE: forest-express has not been sym linked.
      if (this.dirname.includes('node_modules')) {
        var splitPaths = this.dirname.split(path.sep);
        var nodeModuleIndex = splitPaths.indexOf('node_modules');
        var subPathsToProject = splitPaths.slice(0, nodeModuleIndex); // NOTICE: on POSIX system, empty path created by previous split is skipped by path.join.

        if (!path.isAbsolute(path.join.apply(path, (0, _toConsumableArray2["default"])(subPathsToProject)))) {
          return path.join.apply(path, [path.sep].concat((0, _toConsumableArray2["default"])(subPathsToProject)));
        }

        return path.join.apply(path, (0, _toConsumableArray2["default"])(subPathsToProject));
      } // NOTICE: forest-express is sym linked, assuming the process is running on project directory.


      return process.cwd();
    }
  }]);
  return ProjectDirectoryUtils;
}();

module.exports = ProjectDirectoryUtils;