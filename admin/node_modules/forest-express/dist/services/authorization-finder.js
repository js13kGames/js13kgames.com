"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var AuthorizationFinder = /*#__PURE__*/function () {
  /** @private @readonly @type {import('./forest-server-requester')} */

  /** @private @readonly @type {import('./logger')} */

  /** @private @readonly @type {import('../utils/error-messages')} */

  /**
   * @param {import('../context/init').Context} context
   */
  function AuthorizationFinder(context) {
    (0, _classCallCheck2["default"])(this, AuthorizationFinder);
    (0, _defineProperty2["default"])(this, "forestServerRequester", void 0);
    (0, _defineProperty2["default"])(this, "logger", void 0);
    (0, _defineProperty2["default"])(this, "errorMessages", void 0);
    this.forestServerRequester = context.forestServerRequester;
    this.logger = context.logger;
    this.errorMessages = context.errorMessages;
  }
  /**
   * @private
   * @param {Error} error
   * @returns {string}
   */


  (0, _createClass2["default"])(AuthorizationFinder, [{
    key: "_generateAuthenticationErrorMessage",
    value: function _generateAuthenticationErrorMessage(error) {
      var errorMessageToForward;

      switch (error.message) {
        case this.errorMessages.SERVER_TRANSACTION.SECRET_AND_RENDERINGID_INCONSISTENT:
          errorMessageToForward = error.message;
          break;

        case this.errorMessages.SERVER_TRANSACTION.SECRET_NOT_FOUND:
          errorMessageToForward = 'Cannot retrieve the project you\'re trying to unlock. ' + 'Please check that you\'re using the right environment secret regarding your project and environment.';
          break;

        default:
          errorMessageToForward = undefined;
      }

      return errorMessageToForward;
    }
    /**
     * @param {number|string} renderingId
     * @param {string} environmentSecret
     * @param {string|null|undefined} twoFactorRegistration
     * @param {string} email
     * @param {string} password
     * @param {string} forestToken
     */

  }, {
    key: "authenticate",
    value: function () {
      var _authenticate = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(renderingId, environmentSecret, twoFactorRegistration, email, password, forestToken) {
        var pathEnd, headers, url, result, user;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (email && password) {
                  pathEnd = 'authorization';
                  headers = {
                    email: email,
                    password: password
                  };
                } else if (forestToken) {
                  pathEnd = 'google-authorization';
                  headers = {
                    'forest-token': forestToken
                  };
                }

                url = "/liana/v2/renderings/".concat(renderingId, "/").concat(pathEnd);

                if (twoFactorRegistration) {
                  url += "?two-factor-registration=".concat(twoFactorRegistration);
                }

                _context.prev = 3;
                _context.next = 6;
                return this.forestServerRequester.perform(url, environmentSecret, null, headers);

              case 6:
                result = _context.sent;
                user = result.data.attributes;
                user.id = result.data.id;
                return _context.abrupt("return", user);

              case 12:
                _context.prev = 12;
                _context.t0 = _context["catch"](3);
                this.logger.error('Authorization error: ', _context.t0);
                throw new Error(this._generateAuthenticationErrorMessage(_context.t0));

              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[3, 12]]);
      }));

      function authenticate(_x, _x2, _x3, _x4, _x5, _x6) {
        return _authenticate.apply(this, arguments);
      }

      return authenticate;
    }()
  }]);
  return AuthorizationFinder;
}();

module.exports = AuthorizationFinder;